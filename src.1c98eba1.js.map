{"version":3,"sources":["index.js"],"names":["data","inputYear","document","querySelector","inputHour","button","timerTitle","timerValue","querySelectorAll","lastPickedDate","refreshTimer","initialization","interval","localStorage","setInterval","clearInterval","date","Date","getTime","difference","getItem","split","map","item","parseInt","textContent","days","hours","minutes","seconds","dataset","value","Math","abs","LastDate","addEventListener","e","preventDefault","newData","correctTime","setItem","removeItem","forEach"],"mappings":";;;AA6EA,aA7EA,QAAA,oBAEA,MAAMA,EAAO,CACXC,UAAWC,SAASC,cAAc,wBAClCC,UAAWF,SAASC,cAAc,wBAClCE,OAAQH,SAASC,cAAc,oBAC/BG,WAAYJ,SAASC,cAAc,gBACnCI,WAAYL,SAASM,iBAAiB,gBACtCC,eAAgBP,SAASC,cAAc,qBACvCO,aAAcR,SAASC,cAAc,mBAOvC,SAASQ,IACHC,IAAAA,EACAC,aAAab,KACfY,EAAWE,YAAY,KAChBD,aAAab,MAChBe,cAAcH,GAEVI,MAAAA,GAAO,IAAIC,MAAOC,UAQlBC,GANa,IAAIF,QAClBJ,aACAO,QAAQ,QACRC,MAAM,KACNC,IAAIC,GAAQC,SAASD,KACxBL,UAC+BF,GAAQ,IACrCG,EAAa,IACfnB,EAAKM,WAAWmB,YAAc,mCAE1BC,MAAAA,EAAOF,SAASL,EAAa,GAAK,GAAK,IACvCQ,EAAQH,UAAUL,EAAoB,GAAPO,EAAY,GAAK,IAAM,GAAK,IAC3DE,EAAUJ,UAAUL,EAAoB,GAAPO,EAAY,GAAK,GAAa,GAARC,EAAa,IAAM,IAC1EE,EAAUL,SAASL,EAAoB,GAAPO,EAAY,GAAK,GAAa,GAARC,EAAa,GAAe,GAAVC,GAEzE,IAAA,MAAML,KAAQvB,EAAKO,WACK,SAAvBgB,EAAKO,QAAQC,MACfR,EAAKE,YAAcO,KAAKC,IAAIP,GACI,UAAvBH,EAAKO,QAAQC,MACtBR,EAAKE,YAAcO,KAAKC,IAAIN,GACI,YAAvBJ,EAAKO,QAAQC,MACtBR,EAAKE,YAAcO,KAAKC,IAAIL,GACI,YAAvBL,EAAKO,QAAQC,QACtBR,EAAKE,YAAcO,KAAKC,IAAIJ,KAG/B,KAEHd,cAAcH,GAzCdC,aAAaqB,WACflC,EAAKS,eAAegB,YAAcZ,aAAaO,QAAQ,aA2CzDT,IAEAX,EAAKK,OAAO8B,iBAAiB,QAASC,IAEhC,GADJA,EAAEC,kBACGrC,EAAKC,UAAU8B,MAAO,OACrBO,MAAAA,EAAUtC,EAAKC,UAAU8B,MAAMV,MAAM,KACrCkB,EAAcvC,EAAKI,UAAU2B,MAAMV,MAAM,KAAKC,IAAIC,GAAQC,SAASD,IACzEV,aAAa2B,QAAQ,OAAQ,CAC3BhB,SAASc,EAAQ,IACjBd,SAASc,EAAQ,IAAM,EACvBd,SAASc,EAAQ,OACdC,IAGL1B,aAAa2B,QAAQ,cAAexC,EAAKC,UAAU8B,SAAS/B,EAAKI,UAAU2B,SAC3E/B,EAAKC,UAAU8B,MAAQ,GACvB/B,EAAKI,UAAU2B,MAAQ,GACvB/B,EAAKS,eAAegB,YAAcZ,aAAaO,QAAQ,YACvDT,MAGFX,EAAKU,aAAayB,iBAAiB,QAAS,KAC1CtB,aAAa4B,WAAW,QACxBzC,EAAKO,WAAWmC,QAAQnB,GAASA,EAAKE,YAAc","file":"src.1c98eba1.js","sourceRoot":"../src","sourcesContent":["import './scss/main.scss';\n\nconst data = {\n  inputYear: document.querySelector('.selected-input.year'),\n  inputHour: document.querySelector('.selected-input.hour'),\n  button: document.querySelector('.selected-button'),\n  timerTitle: document.querySelector('.timer-title'),\n  timerValue: document.querySelectorAll('.timer-value'),\n  lastPickedDate: document.querySelector('.last-picked-date'),\n  refreshTimer: document.querySelector('.refresh-timer'),\n};\n\nif (localStorage.LastDate) {\n  data.lastPickedDate.textContent = localStorage.getItem('LastDate');\n}\n\nfunction initialization() {\n  let interval;\n  if (localStorage.data) {\n    interval = setInterval(() => {\n      if (!localStorage.data) {\n        clearInterval(interval);\n      }\n      const date = new Date().getTime();\n\n      const pickedDate = new Date(\n        ...localStorage\n          .getItem('data')\n          .split(',')\n          .map(item => parseInt(item)),\n      ).getTime();\n      const difference = (pickedDate - date) / 1000;\n      if (difference < 0) {\n        data.timerTitle.textContent = 'Passed since the selected date:';\n      }\n      const days = parseInt(difference / 60 / 60 / 24);\n      const hours = parseInt((difference - days * 24 * 60 * 60) / 60 / 60);\n      const minutes = parseInt((difference - days * 24 * 60 * 60 - hours * 60 * 60) / 60);\n      const seconds = parseInt(difference - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60);\n\n      for (const item of data.timerValue) {\n        if (item.dataset.value === 'days') {\n          item.textContent = Math.abs(days);\n        } else if (item.dataset.value === 'hours') {\n          item.textContent = Math.abs(hours);\n        } else if (item.dataset.value === 'minutes') {\n          item.textContent = Math.abs(minutes);\n        } else if (item.dataset.value === 'seconds') {\n          item.textContent = Math.abs(seconds);\n        }\n      }\n    }, 1000);\n  } else {\n    clearInterval(interval);\n  }\n}\ninitialization();\n\ndata.button.addEventListener('click', e => {\n  e.preventDefault();\n  if (!data.inputYear.value) return;\n  const newData = data.inputYear.value.split('/');\n  const correctTime = data.inputHour.value.split(':').map(item => parseInt(item));\n  localStorage.setItem('data', [\n    parseInt(newData[0]),\n    parseInt(newData[1]) - 1,\n    parseInt(newData[2]),\n    ...correctTime,\n  ]);\n\n  localStorage.setItem('LastDate', `${data.inputYear.value} ${data.inputHour.value}`);\n  data.inputYear.value = '';\n  data.inputHour.value = '';\n  data.lastPickedDate.textContent = localStorage.getItem('LastDate');\n  initialization();\n});\n\ndata.refreshTimer.addEventListener('click', () => {\n  localStorage.removeItem('data');\n  data.timerValue.forEach(item => (item.textContent = '00'));\n});\n"]}